{"version":3,"sources":["components/ArticleComponent.js","components/FolderComponent.js","data/data.js","components/FolderSectionComponent.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","_templateObject","props","isDragging","DeleteButton","button","_templateObject2","Article","_this","this","react_default","a","createElement","react_beautiful_dnd_esm","draggableId","article","id","index","provided","snapshot","Object","assign","dragHandleProps","draggableProps","ref","innerRef","href","link","target","content","className","hidden","hideDeleteButton","onClick","deleteArticle","React","Component","FolderComponent_templateObject","Title","h5","FolderComponent_templateObject2","Input","input","_templateObject3","ArticleList","_templateObject4","isDraggingOver","Button","_templateObject5","Header","span","_templateObject6","SearchIcon","i","_templateObject7","Navigation","_templateObject8","InfoText","_templateObject9","InnerList","nextProps","articles","map","ArticleComponent_Article","key","isFirstFolder","Folder","_this2","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","searchTerm","pageNum","handleSearchChange","bind","assertThisInitialized","handleSearchSubmit","mobileSearchSubmit","nextPage","prevPage","_this3","setState","prevState","populateSearchResults","_this4","e","value","_this5","hideNavigation","folder","length","isDragDisabled","FolderComponent_Container","Fragment","type","placeholder","searchInput","onBlur","onChange","onKeyDown","focus","hidePrevButton","hideNextButton","title","droppableId","isDropDisabled","droppableProps","FolderComponent_InnerList","data","folders","folder-1","articleIds","folder-2","folder-3","folderOrder","FolderSectionComponent_templateObject","FolderSection","onDragEnd","result","_objectSpread3","destination","source","start","finish","startarticleIds","Array","from","splice","newStart","objectSpread","finisharticleIds","newFinish","newState","defineProperty","newSearchResults","searchResults","newarticleIds","newfolder","newfolderOrder","nextArticleId","firstResultVisible","lastResultVisible","getWikiArticles","fetch","concat","then","resp","json","_searchResults","_loop","push","catch","err","console","log","newSearch","newArticles","newFolder","lastIdx","firstIdx","indexOf","articleId","folderId","toConsumableArray","newArticleIds","direction","FolderSectionComponent_Container","FolderComponent_Folder","App","FolderSectionComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e478e6a.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  box-shadow: 1px 1px 5px grey;\n  padding: 8px;\n  margin-bottom: 8px;\n  background-color: #FFFBC7;\n  border: 1px solid #1A163D;\n  &:hover {\n    box-shadow: 3px 3px #1A163D;\n  }\n  transition: box-shadow 0.2s ease-in-out;\n  box-shadow: ${props => props.isDragging\n    ? '3px 3px #1A163D'\n    : 'none'};\n  display: flex;\n`;\n\nconst DeleteButton = styled.button`\n  border: none;\n  color: #9E9E9E;\n  background-color: inherit;\n  &:hover {\n    color: black;\n  }\n`;\n\nexport default class Article extends React.Component {\n  render() {\n    return( \n      <Draggable \n        draggableId={this.props.article.id} \n        index={this.props.index}\n      >\n        {(provided, snapshot) => (\n          <Container\n            {...provided.dragHandleProps}\n            {...provided.draggableProps}\n            ref={provided.innerRef}\n            isDragging={snapshot.isDragging}\n          >\n              <a href={this.props.article.link} target=\"_blank'\">{this.props.article.content}</a>\n              <DeleteButton className=\"fa fa-trash-o\"\n                            hidden={this.props.hideDeleteButton}\n                            onClick={() => this.props.deleteArticle(this.props.article.id)}\n              />\n            \n          </Container>\n        )}\n      </Draggable>\n    );\n  }\n}","import React from 'react';\nimport styled from 'styled-components';\nimport Article from './ArticleComponent';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst Container = styled.div`\n  margin: 12px;\n  margin-top: ${props => props.index === 0 ? '80px' : null};\n  border: 2px solid #1A163D;\n  background-color: white;\n  width: 260px;\n  min-height: 260px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\nconst Title = styled.h5`\n  color: white;\n  padding: 8px;\n  margin: 0;\n`;\nconst Input = styled.input`\n  padding: 8px;\n  width: 60%;\n  background-color: inherit;\n  font-weight: 200;\n  border-style: none;\n  &:focus {\n    outline: none;\n  }\n\n`;\nconst ArticleList = styled.div`\n  padding: 8px;\n  flex-grow: 1;\n  transition: box-shadow 0.2s ease-in-out;\n  box-shadow: ${props => (props.isDraggingOver ? '6px 6px #1A163D' : 'none')};\n  min-height: 100px;\n  `;\n\nconst Button = styled.button`\nborder: none;\nbackground: transparent;\ncolor: #1A163D;\n&:focus {\n  outline: none;\n}\n&:hover {\n  color: white;\n}\n`;\n\nconst Header = styled.span`\nbackground-color: #E07D7E;\ncolor: white;\nborder-bottom: 1px solid lightgrey;\n`;\n\nconst SearchIcon = styled.i`\nposition: absolute;\ntop: 3px;\nright: 8px;\n&:hover {\n  cursor: pointer;\n}\n`;\n\nconst Navigation = styled.span`\nposition: absolute;\ntop: 3px;\nright: 2px;\n`;\n\nconst InfoText = styled.div`\nposition: absolute;\ntop: -70px;\nleft: -14px;\n`;\n\nclass InnerList extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.articles === this.props.articles) {\n      return false;\n    }\n    return true;\n  }\n  render() {\n    return this.props.articles.map((article, index) => (\n      <Article key={article.id}\n               article={article} \n               index={index}\n               hideDeleteButton={this.props.isFirstFolder}\n               deleteArticle = {this.props.deleteArticle}\n      />\n    ));\n  }\n}\n\nexport default class Folder extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: '',\n      pageNum: 1\n    };\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearchSubmit = this.handleSearchSubmit.bind(this);\n    this.mobileSearchSubmit = this.mobileSearchSubmit.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n    this.prevPage = this.prevPage.bind(this);\n  }\n\n  nextPage() {\n    this.setState(prevState => ({pageNum: prevState.pageNum + 1}),\n      () => this.props.populateSearchResults('', this.state.pageNum, false));\n  }\n\n  prevPage() {\n    this.setState(prevState => ({pageNum: prevState.pageNum - 1}),\n      () => this.props.populateSearchResults('', this.state.pageNum, false));\n  }\n\n  handleSearchChange(e) {\n    this.setState({searchTerm: e.target.value});\n  }\n\n  mobileSearchSubmit() {\n    this.props.populateSearchResults(this.state.searchTerm, 1);\n  }\n\n  handleSearchSubmit(e) {\n    if(e.key === 'Enter') {\n      this.props.populateSearchResults(this.state.searchTerm, 1);\n    }\n  }\n\n  render() {\n    const isFirstFolder = this.props.index === 0;\n    const hideNavigation = this.props.folder.id !== 'folder-1' ||\n      (this.props.folder.id === 'folder-1' && this.props.articles.length === 0);\n    return(\n      <Draggable \n        draggableId={this.props.folder.id} \n        isDragDisabled={this.props.folder.id === 'folder-1'}\n        index={this.props.index}\n        >\n        {provided => (\n          <Container\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            index={this.props.index}\n          >\n                {!isFirstFolder \n                  ? <Header>\n                      <Title>{this.props.folder.title}</Title>\n                    </Header> \n                  : <React.Fragment>\n                      <InfoText>\n                        <ol>\n                          <li>Search Wikipedia</li>\n                          <li>Drag and drop articles</li>\n                        </ol>\n                      </InfoText>\n                      <Header>\n                        <Input type='text'\n                               placeholder=\"Search Wikipedia...\"\n                               ref={input => this.searchInput = input} \n                               value={this.state.searchTerm}\n                               onBlur={this.mobileSearchSubmit}\n                               onChange={this.handleSearchChange}\n                               onKeyDown={this.handleSearchSubmit}\n                        />\n                        <SearchIcon className=\"fa fa-2x fa-search\"\n                                    hidden={!hideNavigation}\n                                    onClick={() => this.searchInput.focus()}   />\n                        <Navigation hidden={hideNavigation}>\n                          <Button onClick={this.prevPage}\n                                  hidden={this.props.hidePrevButton} \n                                  className=\"fa fa-arrow-circle-left fa-2x\" />\n                          <Button onClick={this.nextPage}\n                                  hidden={this.props.hideNextButton}\n                                  className=\"fa fa-arrow-circle-right fa-2x\" />\n                        </Navigation>\n                      </Header>\n                    </React.Fragment> \n                }\n            <Droppable droppableId={this.props.folder.id} \n                       type=\"article\"\n                       isDropDisabled={this.props.folder.id === 'folder-1'}>\n              {(provided, snapshot) => (\n                <ArticleList\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  isDraggingOver={snapshot.isDraggingOver}\n                >\n                  <InnerList articles={this.props.articles}\n                             isFirstFolder={this.props.folder.id === 'folder-1'}\n                             deleteArticle={this.props.deleteArticle}\n                  />\n                  \n                  {provided.placeholder}\n                </ArticleList>\n              )}\n            </Droppable>\n          </Container>\n        )}\n      </Draggable>\n    );\n  }\n}","const data = {\n  articles: {},\n  folders: {\n    'folder-1': {\n      id: 'folder-1',\n      title: '',\n      articleIds: [],\n    },\n    'folder-2': {\n      id: 'folder-2',\n      title: 'Interesting',\n      articleIds: [],\n    },\n    'folder-3': {\n      id: 'folder-3',\n      title: 'Favorites',\n      articleIds: [],\n    },\n  },\n  folderOrder: ['folder-1', 'folder-2', 'folder-3'],\n};\n\nexport default data;","import React from 'react';\nimport styled from 'styled-components';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport Folder from './FolderComponent';\nimport data from '../data/data';\n\nconst Container = styled.div`\ndisplay: flex;\njustify-content: center;\n`;\n\nclass FolderSection extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      articles: data.articles,\n      folders: data.folders,\n      folderOrder: data.folderOrder,\n      nextArticleId: 0,\n      searchResults: [],\n      firstResultVisible: false,\n      lastResultVisible: false\n    };\n  \n    this.getWikiArticles = this.getWikiArticles.bind(this);\n    this.populateSearchResults = this.populateSearchResults.bind(this);\n    this.deleteArticle = this.deleteArticle.bind(this);\n  }\n\n\n  async getWikiArticles(searchTerm) {\n    let searchResults = [];\n    if (searchTerm !== '') {\n      await fetch(`https://en.wikipedia.org/w/api.php?&origin=*&action=opensearch&search=${searchTerm}&limit=35`)\n            .then(resp => resp.json())\n            .then(data => {\n              let _searchResults = []\n              for (let i=0; i < data[1].length; i++) {\n                this.setState(prevState => ({nextArticleId: prevState.nextArticleId + 1}), () => {\n                  _searchResults.push({id: `article-${this.state.nextArticleId}`, content: data[1][i], link: data[3][i]});\n                });\n              }\n              return _searchResults;\n            })\n            .then(_searchResults => searchResults = _searchResults)\n            .catch(err => console.log(err));\n          }\n    return searchResults;\n  }\n\n  async populateSearchResults(searchTerm, pageNum, newSearch=true) {\n    const newArticles = {};\n      const newFolder = {\n        id: 'folder-1',\n        title: '',\n        articleIds: []\n      };\n    let searchResults = [];\n    if (newSearch) {\n      searchResults = await this.getWikiArticles(searchTerm);\n    } else {\n      searchResults = this.state.searchResults;\n    }\n    this.setState({searchResults}, () => {\n      let lastIdx = pageNum * 5;\n      if (lastIdx >= searchResults.length) {\n        lastIdx = searchResults.length;\n      }\n      let firstIdx = lastIdx - 5;\n      if (firstIdx < 0) {\n        firstIdx = 0;\n      }\n      for (let i=firstIdx; i < lastIdx; i++) {\n        newArticles[searchResults[i].id] = {\n                                              id: searchResults[i].id,\n                                              content: searchResults[i].content, \n                                              link: searchResults[i].link\n                                            };\n        newFolder.articleIds.push(searchResults[i].id)\n      }\n      const newState = {\n        ...this.state,\n        articles: {...this.state.articles, ...newArticles},\n        folders: {\n          ...this.state.folders,\n          'folder-1': newFolder\n        }\n      };\n      this.setState(newState, () => {\n        if (searchResults[0]) {\n          const firstResultVisible = this.state.folders['folder-1']\n                                      .articleIds.indexOf(searchResults[0].id) !== -1;\n          const lastResultVisible = this.state.folders['folder-1']\n                                      .articleIds.indexOf(searchResults[searchResults.length - 1].id) !== -1;\n          this.setState({firstResultVisible});\n          this.setState({lastResultVisible});\n        }\n      });\n    })\n  }\n\n  deleteArticle(articleId) {\n    const folders = this.state.folders;\n    let folderId = 0;\n    for (let id in folders) {\n      if (folders[id].articleIds.indexOf(articleId) !== -1) {\n        folderId = id;\n      }\n    }\n\n    let newSearchResults = [...this.state.searchResults];\n    for (let i=0; i < newSearchResults.length; i++) {\n      if (newSearchResults[i].id === articleId) {\n        newSearchResults.splice(i, 1);\n      } \n    }\n    this.setState({searchResults: newSearchResults});\n\n    const newArticles = {};\n    for (let id in this.state.articles) {\n      if (id !== articleId) {\n        newArticles[id] = this.state.articles[id];\n      }\n    }\n    const folder = this.state.folders[folderId];\n    const newArticleIds = [...folder.articleIds];\n    newArticleIds.splice(newArticleIds.indexOf(articleId), 1);\n    const newFolder = {\n      id: folder.id,\n      title: folder.title,\n      articleIds: newArticleIds\n    }\n    const newState = {\n      ...this.state,\n      articles: newArticles,\n      folders: {\n        ...this.state.folders,\n        [folderId]: newFolder\n      }\n    };\n    this.setState(newState);\n  }\n\n  onDragEnd = result => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n    \n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index  \n    ) {\n      return;\n    }\n\n    if (type === 'folder') {\n      const newfolderOrder = Array.from(this.state.folderOrder);\n      newfolderOrder.splice(source.index, 1);\n      newfolderOrder.splice(destination.index, 0, draggableId);\n\n      const newState = {\n        ...this.state,\n        folderOrder: newfolderOrder,\n      };\n      this.setState(newState);\n      return;\n    }\n\n    const start = this.state.folders[source.droppableId];\n    const finish = this.state.folders[destination.droppableId];\n\n    if (start === finish) {\n      const newarticleIds = Array.from(start.articleIds);\n      newarticleIds.splice(source.index, 1);\n      newarticleIds.splice(destination.index, 0, draggableId);\n\n      const newfolder = {\n        ...start,\n        articleIds: newarticleIds  \n      }\n\n      const newState = {\n        ...this.state,\n        folders: {\n          ...this.state.folders,\n          [newfolder.id]:newfolder\n        },\n      };\n\n      this.setState(newState);\n      return;\n    }\n    \n    // Moving from one Folder to another\n    const startarticleIds = Array.from(start.articleIds);\n    startarticleIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      articleIds: startarticleIds,\n    };\n\n    const finisharticleIds = Array.from(finish.articleIds);\n    finisharticleIds.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finish,\n      articleIds: finisharticleIds,\n    };\n\n    const newState = {\n      ...this.state,\n      folders: {\n        ...this.state.folders,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n    this.setState(newState);\n\n    // update searchResults after drag from 'folder-1'\n    if (start.id === 'folder-1') {\n      const newSearchResults = Array.from(this.state.searchResults);\n      for (let i=0; i < newSearchResults.length; i++) {\n        if (newSearchResults[i].id === draggableId) {\n          newSearchResults.splice(i, 1);\n        }\n      }\n      this.setState({searchResults: newSearchResults});\n    }\n  };\n\n  render() {\n    return(\n      <DragDropContext \n        onDragEnd={this.onDragEnd}\n      >\n        < Droppable \n          droppableId = \"all-folders\"\n          direction = \"horizontal\"\n          type = \"folder\"\n        >\n          {provided => (\n            <Container\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              className=\"row\"\n            >\n              {this.state.folderOrder.map((folderId, index) => {\n                const folder = this.state.folders[folderId];\n                const articles = folder.articleIds.map(articleId => this.state.articles[articleId]);\n                return (\n                  <Folder \n                    className=\"col\"\n                    key={folder.id}\n                    folder={folder} \n                    articles={articles} \n                    index={index}\n                    populateSearchResults={this.populateSearchResults}\n                    deleteArticle={this.deleteArticle}\n                    hidePrevButton={this.state.firstResultVisible}\n                    hideNextButton={this.state.lastResultVisible}\n                  />\n                );\n              })}\n              {provided.placeholder}\n            </Container>\n          )}\n        </Droppable>\n      </DragDropContext> \n    );\n  }\n}\n\nexport default FolderSection;\n","import React from 'react';\nimport FolderSection from './components/FolderSectionComponent'\n\nfunction App() {\n  return(\n    <div className=\"container\">\n      <div className=\"row text-center mt-4\">\n        <div className=\"col\">\n          <h2>Wikipedia Article Manager</h2>\n        </div>\n      </div>\n      <div className=\"row mt-2\">\n        <div className=\"col\">\n          <FolderSection />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}